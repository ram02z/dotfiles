#!/usr/bin/env sh

# Description: Regular mode:
#                Fuzzy find a file in directory subtree.
#                Opens in $VISUAL or $EDITOR if text.
#                Opens other type of files with xdg-open.
#                Work only with a single file selected.
#
#              Picker mode:
#                If picker mode output file is passed, it
#                will be overwritten with any picked files.
#                Leaves untouched if no file is picked.
#                Works with single/multiple files selected.
#
# Dependencies: fd/find, fzf/skim, xdg-open
#
# Shell: POSIX compliant
# Author: Arun Prakash Jana
{{ if lookPath "fzf" }}
    {{- if env "FZF_DEFAULT_COMMAND" }}
cmd={{ env "FZF_DEFAULT_COMMAND" | quote }}
    {{- else }}
        {{ if lookPath "fd" }}
cmd="fd -t f 2>/dev/null"
        {{- else }}
cmd="find . -type f 2>/dev/null"
        {{ end }}
    {{- end }}
entry="$(eval "$cmd" | fzf -m --delimiter / --nth=-1 --tiebreak=begin --info=hidden)"
# To show only the file name
# entry=$(find . -type f 2>/dev/null | fzf --delimiter / --with-nth=-1 --tiebreak=begin --info=hidden)
{{- else if lookPath "sk" }}
entry=$(find . -type f 2>/dev/null | sk)
{{- else }}
exit 1
{{- end }}

# Check for picker mode
if [ "$3" ]; then
    if [ "$entry" ]; then
        if [ "-" = "$3" ]; then
            printf "%s\n" "$entry"
        else
            printf "%s\n" "$entry" > "$3"
        fi

        # Tell `nnn` to clear its internal selection
        printf "%s" "0p" > "$NNN_PIPE"
    fi

    exit 0
fi

# Open the files (multiple files tested on (n)vim and vscode)
IFS='
'
cmd="${VISUAL:-$EDITOR}"
for fname in $entry; do
    if [ "$fname" = "." ] || { ! [ -d "$fname" ] && ! [ -f "$fname" ]; }; then
        printf "%s cannot be opened\n" "$fname"
        continue
    fi
    cmd="$cmd $fname"
done

eval $cmd || exit
