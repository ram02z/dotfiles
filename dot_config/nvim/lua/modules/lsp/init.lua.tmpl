{{ $servers := 0 }}
-- Define enabled servers
local servers = {
{{ if lookPath "rust-analyzer" -}}
rust_analyzer = {},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "gopls" -}}
gopls = {
  filetypes = { "go", "gomod", "gotmpl", "chezmoitmpl" },
  settings = {
    gopls = {
      staticcheck = true,
      analyses = {
        fieldalignment = true,
      },
    },
  },
},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "clangd" -}}
-- clangd moved to start_clangd
{{- $servers = add1 $servers -}}
{{ else if lookPath "ccls" -}}
ccls = {},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "pyright" -}}
pyright = {
  settings = {
    python = {
      analysis = {
        useLibraryCodeForTypes = false
      }
    }
  }
},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "vscode-html-language-server" -}}
html = {},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "vscode-css-language-server" -}}
cssls = {},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "vscode-json-language-server" -}}
jsonls = {
  settings = {
    json = {
      schemas = require("schemastore").json.schemas(),
    },
  },
},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "vscode-eslint-language-server" -}}
eslint = {},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "texlab" -}}
texlab = {},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "lua-language-server" -}}
sumneko_lua = {
  autostart = false,
  settings = {
    Lua = {
      runtime = {
        version = "LuaJIT",
        path = vim.split(package.path, ";"),
      },
      workspace = {
        library = vim.api.nvim_get_runtime_file('', true),
        maxPreload = 2000,
        preloadFileSize = 50000,
      },
      diagnostics = {
        globals = { "vim" },
      },
      telemetry = { enable = false },
    },
  },
},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "typescript-language-server" -}}
tsserver = {},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "jsonnet-language-server" -}}
jsonnet_ls = {},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "marksman" -}}
marksman = {},
{{- $servers = add1 $servers -}}
{{- end }}
{{ if lookPath "clangd" -}}
clangd = {
  server = {
    cmd = {
      "clangd", "--background-index", "--pch-storage=memory",
      "--clang-tidy", "--enable-config", "--header-insertion=iwyu"
    },
  },
}
{{- $servers = add1 $servers -}}
{{- end }}
}

local M = {}

function M.setup_servers()
  {{ if gt $servers 0 -}}
  -- Register all the LSP servers.
  local lspconfig = require("lspconfig")
  local common_config = require("modules.lsp.config").make()
  for server, config in pairs(servers) do
    -- Merge per-LSP configs with the common settings, and use that:
    lspconfig[server].setup(vim.tbl_extend("keep", config, common_config))
  end
  {{- end }}
end



return M
