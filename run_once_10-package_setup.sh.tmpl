{{ if (eq .chezmoi.os "linux") -}}

#!/bin/bash
#
# Installs packages once chezmoi setup is over
#

_isInstalled() {
    package="$1"
    {{ if (eq .chezmoi.osRelease.id "void")}}
    sudo xbps-query "${package}" &>/dev/null;
    {{ else if (eq (get .chezmoi.osRelease "idLike") "arch") }}
    sudo paru -Qs "${package}" &>/dev/null;
    {{ else if (eq (get .chezmoi.osRelease "idLike") "debian") }}
    sudo dpkg -s "${package}" &>/dev/null;
    {{ end }}
    return $?
}

_installMany() {
    # The packages that are not installed will be added to this array
    notInstalled=();

    for pkg; do
        # If package is installed, skip it
        _isInstalled "${pkg}"
        if [[ $? == 0 ]]; then
            echo "${pkg} is already installed.";
            continue;
        fi;

        # Otherwise, ask user if they want to add it to the list of packages
        read -p "Add ${pkg}?" -n 1 -r
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            notInstalled+=("${pkg}");
        fi;
        printf "\n";

    done;

    # If package array is empty, don't do anything and stop the function
    if [[ "${notInstalled[@]}" == "" ]] ; then
        echo "All packages are already installed.";
        return;
    fi;

    # Install all package added to array
    printf "Packages not installed:\n";
    printf "%s\n" "${notInstalled[@]}";
    {{ if (eq .chezmoi.osRelease.id "void")}}
    sudo xbps-install -Sv "${notInstalled[@]}";
    {{ else if (eq (get .chezmoi.osRelease "idLike") "arch") }}
    sudo paru -S "${notInstalled[@]}";
    {{ else if (eq (get .chezmoi.osRelease "idLike") "debian") }}
    sudo apt install "${notInstalled[@]}";
    {{ end }}
}

# params: repo name, repo url, repo version, public key url
_addAptRepo() {
    find /etc/apt/sources.list.d/ -type f | grep $1 >/dev/null 2>&1
    if [[ $? != 0 ]]; then
        echo "Adding key from $4";
        # TODO: apt-key is depriciated
        curl -fsSL $4 | sudo apt-key add -
        echo "Adding repo: $1"
        echo "deb" $2 $3 "main" | sudo tee "/etc/apt/sources.list.d/$1.list"
        sudo apt update >/dev/null 2>&1
        return 0;
    fi;
    return 1;
}

{{- if (eq .chezmoi.osRelease.id "void") }}
{{ if (not (stat "/etc/xbps.d/11-neovim-nightly.conf")) -}}
# Add neovim-nightly repo
if [[ $(xbps-uhelper arch) == *"musl"* ]]; then
    echo 'repository=https://ram02z.github.io/neovim-nightly/musl' | sudo tee /etc/xbps.d/11-neovim-nightly.conf
else
    echo 'repository=https://ram02z.github.io/neovim-nightly/glibc' | sudo tee /etc/xbps.d/11-neovim-nightly.conf
fi
{{- end }}
packages=("fish-shell" "neovim-nightly" "chrony"
"nnn" "git" "delta" "base-devel" "jq" "fzf" "gnupg"
"curl" "ripgrep" "bottom" "zoxide" "bat" "fd" "nftables"
"exa" "hyperfine" "rustup" "trash-cli" "meson" "clang"
"openresolv" "pinentry-tty" "fuzzypkg" "xtools" "dcron");
{{ if .is_laptop }}
packages+=("light");
{{ end }}
{{ if .is_wayland -}}
packages+=("sway" "seatd" "polkit" "firefox" "foot" "poweralertd" "bluez"
    "wdisplays" "waylock" "pipewire" "pulseaudio-utils" "libspa-bluetooth"
    "mpv" "libnotify" "wl-clipboard" "CopyQ" "swayidle" "wtype" "fuse-sshfs"
    "font-iosevka" "i3status-rust" "python3-i3ipc" "xdg-utils" "mesa-dri"
    "iwd" "wev" "slurp" "grim" "mako" "grimshot" "man-pages-devel"
    "iwgtk" "playerctl" "noto-fonts-emoji" "dejavu-fonts-ttf");
{{- end }}
{{ else if (eq (get .chezmoi.osRelease "idLike") "arch") }}
# Assumes we are running sway
# Checks if paru has been installed
{{ if not (lookPath "paru") }}
sudo pacman -S --needed base-devel
git clone https://aur.archlinux.org/paru.git /tmp/
cd paru
makepkg -si
rm -rf /tmp/paru
{{ end }}
packages=("sway" "fish" "neovim-nightly-bin" "git-delta-bin");
{{ else if (eq (get .chezmoi.osRelease "idLike") "debian") }}
{{ $versionCodename := or (get .chezmoi.osRelease "versionCodename") "all" }}
    {{ if (eq .chezmoi.osRelease.id "ubuntu") }}
    {{ if not (stat (joinPath "/etc/apt/sources.list.d/" "neovim-nightly.list")) -}}
_addAptRepo "neovim-nightly" "http://ppa.launchpad.net/neovim-ppa/unstable/ubuntu" {{ $versionCodename | quote }} "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x9dbb0be9366964f134855e2255f96fcf8231b6dd"
{{- end }}
{{ if not (stat (joinPath "/etc/apt/sources.list.d/" "fish-shell-3.list")) -}}
_addAptRepo "fish-shell-3" "http://ppa.launchpad.net/fish-shell/release-3/ubuntu" {{ $versionCodename | quote }} "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x59fda1ce1b84b3fad89366c027557f056dc33ca5"
{{- end }}
    {{ end }}
{{ if not (stat (joinPath "/etc/apt/sources.list.d/" "rust-cli-tools.list")) -}}
# Add apt.cli.rs repo
_addAptRepo "rust-cli-tools" "https://apt.0xe.me" "all" "https://apt.cli.rs/pubkey.asc"
{{ end }}
packages=("fish" "neovim" "python3-neovim" "nnn" "build-essential" "bat-musl"
    "fd-musl" "hyperfine-musl" "ripgrep" "git-delta-musl");
{{ end }}
_installMany "${packages[@]}";

# vim: ft=sh
{{- end }}
