#!/usr/bin/env bash

set -e

# Only shows suspended non-default sinks

# Dependencies
# - pactl
# - ripgrep (can be substituted with another search tool)
# - rofi (can be substituted as long as additional arguments are tweaked)
# - GNU coreutils

move_sink_inputs() {
    sink="$1"
    [ -n "$sink" ] || return 1

    sink_inputs=$(pactl list sink-inputs) || return 1

    while read -r sink_input; do
        index=$(echo "$sink_input" | rg -o "\d+$")
        pactl move-sink-input "$index" "$sink" || return 1
    done < <(echo "$sink_inputs" | rg "Sink Input")
}

get_default_sink() {
    pactl info | sed -En 's/Default Sink: (.*)/\1/p'
}

list_sinks() {
    sinks=$(pactl list sinks short) || return 1
    sinks=$(echo "$sinks" | rg -o '^\S*.\S*' | sed -e "s/\t/\ /g")
    if [ "$1" = "suspended" ]; then
        def=$(get_default_sink)
        sinks=$(echo "$sinks" | sed "/$def/d")
    fi
    echo -n "$sinks"
}

select_sink() {
    sink="$(list_sinks "suspended" | rofi -dmenu -p "Select sink:")" || return 1
    sink="$(echo "$sink" | cut -f 1 -d " ")"
    [ -n "$sink" ] || return 1

    pactl set-default-sink $sink || return 1
    move_sink_inputs $sink || return 1
}

case "$1" in
	list) list_sinks $2 || exit 1;;
    current) get_default_sink || exit 1;;
	*) select_sink || exit 1;;
esac

exit 0
